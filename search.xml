<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[JavaWebCore--HTML&CSS]]></title>
    <url>%2F2018%2F12%2F16%2FJavaWebCore-HTML-CSS%2F</url>
    <content type="text"><![CDATA[HTML核心知识点表单相关标签★★★★★form表单标签 写法：&lt;form&gt;&lt;/form&gt; 作用：为了将用户通过浏览器输入的数据提交到服务器 &lt;form&gt;标签所包含的重点属性: action、method、enctype action:指定数据需要提交到服务器路径 method:指定数据提交的方式，GET|POST enctype:一般在做文件上传的时候用，设置enctype=”multipart/form-data” 表单提交的工作机制：通过在form标签下设置表单相关标签的name属性，再通过用户输入或者选择自动的给标签设置value属性，在用户点击提交按钮或者用Ajax的方式提交数据时，将数据以key=value&amp;key=v1,v2…的形式传到服务器 input标签 写法：&lt;input&gt;&lt;/input&gt; 作用：为用户提供输入数据的空间 &lt;input&gt;所包含的重点属性：type、name、value name属性：元素名，如果需要表单数据提交到服务器，必须提供name属性值，服务器通过属性值获取用户提交的数据。 value属性：设置input标签的默认值。若为输入框，则当数据提交时value对应用户输入的内容 type属性包含8种重要属性值 text:文本框，单行输入的字段，用户可在其中输入文本，若input标签不设置type默认为text属性。 password:密码框，密码字段，用户输入的数据以黑·标识。 radio：单选框，表示一组互斥选项按钮中的一个。当一个按钮被选中，之前选中的按钮就变为非选中的。 checkbox：复选框，用户可以一次选择多个。 submit：提交按钮。点击此按钮就会把表单数据发送到服务器。 button：普通按钮，经常与JS结合使用。 file：文件上传组件，提供”浏览“按下可以选择需要上传的文件。 hidden：隐藏字段，数据发送给服务器，但浏览器不进行显示。 input标签重点属性学习 name属性（除了submit提交按钮，在其他标签标签上都应该有加上name属性的好习惯） name属性是表单提交中最重要的属性，如果没有此属性则用户提交的任何信息，服务器都无法取得造成数据的丢失。 //错误示例 &lt;input /&gt; 正确示例 &lt;input name=&quot;userName&quot;/&gt; //当这种状况下在用户输入的数据后（eg：Wz）数据才能以userName=Wz的形式传递给后台服务器 type属性 type=”radio”，单选按钮 此处容易混乱 eg：如何设置才能保证单选？eg：性别一个表示男要给表示女 //正确设置示例： 男&lt;input type=&quot;radio&quot; name=&quot;gender&quot; value=&quot;male&quot;/&gt; 女&lt;input type=&quot;radio&quot; name=&quot;gender&quot; value=&quot;female:/&gt; //错误示例 男&lt;input type=&quot;radio&quot; name=&quot;male&quot;/&gt; 女&lt;input type=&quot;radio&quot; name=&quot;female&quot;/&gt; //错误示例 男&lt;input type=&quot;radio&quot; name=&quot;gender&quot;/&gt; 女&lt;input type=&quot;radio&quot; name=&quot;gender&quot;/&gt; 此单选标签在使用的使用一定要写三个属性：type、name、value type：放置radio属性 name：服务器可以识别，因为是单选按钮所以要设置一样的name属性 value：用于提交给服务器的值 type=”hidden”, 隐藏域 应用场景即为某条数据不需要给用户展示，但是用户需要用到这条数据作为逻辑处理 * 场景一: 需要从前台传递一个方法的名称到后台以便调用对应的方法； * 场景二：需要从前台传递一个商品的id值到后台以便后台根据此商品id查询出有关该商品的详细信息。 select下拉列表标签 写法： 12345&lt;select name=&quot;city&quot; type=&quot;multiple&quot;&gt; &lt;option value=&quot;0&quot;&gt;北京&lt;/option&gt; &lt;option value=&quot;1&quot;&gt;南京&lt;/option&gt; &lt;option value=&quot;2&quot;&gt;苏州&lt;/option&gt;&lt;/select&gt; name属性：发送给服务器的名称 multiple属性：不屑默认单选，取值为multiple表示多选 子标签：下拉列表中的一个选项（一个item） selected：勾选当前列表项 value：发送给服务器的选项值 textarea文本域标签 &lt;textarea&gt;文本域。多行的文本输入控件 col属性：文本域的列数 rows属性：文本域的行数 注意：给文本域标签设置默认值的方式：&lt;textarea name=&quot;beizhu&quot;&gt;hello&lt;/textarea&gt; hello即为默认值。 div标签 写法：&lt;div&gt;&lt;/div&gt; div标签就是HTML一个普通标签，进行区域划分 特性：独占一行。 通常用id或class来标签div标签，再结合CSS样式渲染来实现各种效果。 表格标签★★★★★ table：是父标签，相当于整个表格的容器 border：表格边框的宽度 width：表格的宽度 cellpadding：单元边沿与其内容之间的空白 cellspacing：单元格之间的空白 bgcolor：表格的背景颜色 tr标签：用于定义行td标签：用于定义表格的单元格（一个列）colspan：单元格可横跨的列数rowspan：单元格可横跨的行数align：单元格内容的水平对齐方式，取值：left 左、right 右、center 居中。nowrap：单元格中的内容是否折行 超链接标签a标签★★★★★ &lt;a&gt;标签是超链接标签，是在HTML页面提供的一种可以访问其他位置的实现方式。href：用于确定需要显示页面的路径（URL）target：确定以何种方式打开href所设置的页面。常用取值:_blank、_self等 * _blank： 在新窗口中打开href确定的页面。 * _self默认：使用href确定的页面替换当前页面。 CSS核心知识点CSS样式规则 具体格式 12345 选择器&#123;属性1:属性2;属性2:属性值;...&#125; 具体示例 123456&lt;style&gt; h2&#123; color:red; font-size:100px; &#125;&lt;/style&gt; 注意事项 CSS样式”选择器”严格区分大小写，”属性”和”属性值”不区分大小写 多个属性之间必须使用应为状态下的分号隔开，最后一个属性后的分号可以省略。但是为了增加新样式最好保留。 如果属性之间的值由多个单词组成且中间包含空格，则必须为这个属性值加上英文状态下的引号。引入CSS样式 ★★★ 行内样式 style1234567891011121314151617181920 * 通过标签内部style属性来设置元素的样式 * 行内样式通过标签的属性来控制样式，这样并没有做到结构与标签（HTML展示结构、CSS显示效果）相互分离，所以一般很少使用。* 内部样式 &lt;style type=&quot;text/css&quot;&gt; body&#123; background-color:#ddd; &#125; &lt;/style&gt; * 内嵌式CSS样式只对其所在的HTML页面有效，对其他页面无效，因此不能充分发挥CSS代码的重用优势。* 外部样式 &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;css/demo00.css&quot;/&gt;### 选择器* 元素选择器 * 即用标签名如a、div、table、h1等做选择器 h1{ color:#F00; font-size:50px; } 12* 类选择器 * 给标签设置class后用.class的方式选择标签 .myClass{ font-size:25px; } Java ` 转换：Display HTML提供丰富的标签，这些标签被定义成不同的类型一般分为：块标签和行内标签 块标签：以区域块方式出现。每个块标签独自占据一整行或多整行 常见的块元素：&lt;h1&gt;、&lt;div&gt;、&lt;ul&gt;等 行内元素：不必在新的一行开始，同时也不强迫其他元素在新的一行显示。 常见的行内元素: &lt;span&gt;、&lt;a&gt;等 常见属性值: inline: 此元素将显示为行内元素（行内元素默认的display属性值）。 block：此元素将显示块元素（块元素默认的display属性值）。 none：此元素将被隐藏，不显示，也不占用页面空间。]]></content>
      <categories>
        <category>JavaWebCoreNote</category>
      </categories>
      <tags>
        <tag>JavaWebCoreNote</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[JavaWebCoreNote]]></title>
    <url>%2F2018%2F12%2F16%2FJavaWebCoreNote%2F</url>
    <content type="text"><![CDATA[JavaWebCoreNot系列的内容来源于GitHub上的知识，感谢GitHub用户名为ZhangxiaoHuangfu的分享！ Introduce 适用于初学者使用 JavaWeb核心阶段的主要内容：HTML、CSS、JS、jQuery、Bootstrap、MySQL、JDBC、dbuitls、xml、反射、http、tomcat、Servlet、response、request、Cookie、Session、JSP、EL、JSTL、Ajax、监听器Listener、过滤器Filter、Linux、Redis 目录(Contents)`01. HTML和CSS核心知识点汇总 JavaScript和jQuery核心知识点汇总 MySQL核心知识点汇总 JDBC核心知识点汇总 XML核心知识点汇总 反射核心知识点汇总 HTTP协议核心知识点汇总 Servlet核心知识点 Tomcat核心知识点汇总 Response核心知识点汇总 Request核心知识点汇总 Cookie核心知识点汇总 Session核心知识点汇总`]]></content>
      <categories>
        <category>JavaWebCoreNote</category>
      </categories>
      <tags>
        <tag>JavaWebCoreNote</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[window常用命令]]></title>
    <url>%2F2018%2F12%2F16%2Fwindow%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%2F</url>
    <content type="text"><![CDATA[常用命令 keyword function D/E: 进入D/E盘 ipconfig 查看本机IP cls 清除屏幕 appwiz.cpl 打开删除程序面板 msinfo32 系统信息 12345//删除占用指定端口的进程netstat -ano|findstr &quot;8080&quot; //查询8080端口taskkill/pid 3017 /F 关闭pid为3017的进程 /F标识强制结束 cmd控制台输入命令 keyword description IPCONFIG 进入DOS命令一打直接显示当前的所有网络配置 NETSTAT 显示当前网络链接状态 PING 192.168.0.1 判断DNS解析是否正常 arp 查看主机存储的IP和MAC的映射 systeminfo 查看系统信息（带图像界面的输入msinfo32 tasklist 当前进程列表 各种应用程序直接通过win+r中运行 keyword descrption service.msc 打开服务 devmgmt.msc 打开设备管理 control 打开控制面板 regedit 打开注册表 appwiz.cpl 打开删除程序的面板 msinfo32 系统信息 windows中各种快捷键 keyword function win + E 打开文件管理器 win + D 显示桌面 win + L 锁定计算机 alt + F4 关闭当前程序]]></content>
      <categories>
        <category>windows</category>
      </categories>
      <tags>
        <tag>windows window常用cmd命令 windows小知识</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[我所走过的坑]]></title>
    <url>%2F2018%2F12%2F16%2F%E6%88%91%E6%89%80%E8%B5%B0%E8%BF%87%E7%9A%84%E5%9D%91%2F</url>
    <content type="text"></content>
      <tags>
        <tag>遇到过的🕳</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[计算机网络基础]]></title>
    <url>%2F2018%2F12%2F16%2F%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80%2F</url>
    <content type="text"></content>
      <categories>
        <category>计算机网络</category>
      </categories>
      <tags>
        <tag>计算机网络基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据结构]]></title>
    <url>%2F2018%2F12%2F16%2F%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%2F</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title><![CDATA[Leetcode study notes]]></title>
    <url>%2F2018%2F12%2F16%2FLeetcode-study-notes%2F</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title><![CDATA[schedule]]></title>
    <url>%2F2018%2F12%2F15%2Fschedule%2F</url>
    <content type="text"><![CDATA[1. HeadFirst系列丛书2. 阿里巴巴技术手册（码出高效）3. Mysql数据库4. 软件开发5. 英语]]></content>
      <categories>
        <category>小目标</category>
      </categories>
      <tags>
        <tag>schedule</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[The usage of the Hexo]]></title>
    <url>%2F2018%2F12%2F15%2FThe-usage-of-the-Hexo%2F</url>
    <content type="text"><![CDATA[Hexo的基本使用 hexo g = hexo generate // 生成hexo d = hexo deploy // 部署hexo s = hexo server // 运行服务器hexo new post “article title” //新建文章 Hexo撰写文章创建文章 在站点（eg：F:Blog就是 XXX MINGW64 /F/Blog）下使用此命令：hexo new “title” 此时就会在Blog/source/_post文件夹中创建一个名为: title.md,而这个文件就是要发布到网站上的原始文件，记录文章内容。 使用Markdown编写文章 部署发布 hexo g -d建议：在使用命令 hexo g 部署之后，可以先使用 hexo s 运行本地站点，在浏览器输入地址http://lacolhost:4000/查看运行结果，检查没有错误后再使用命令 hexo d 发布 Hexo命令 init 在folder中建立一个网站 hexo init [folder]public 生成的网站文件，发布的站点文件。 source资源文件夹，用于存放内容。 tag 标签文件夹。 archive归档文件夹。 category分类文件夹。 downloads/code include code文件夹。 :lang i18n_dir 国际化文件夹。 _config.yml 配置文件 new 新建一篇文章。默认为layout布局如果标题含有空格，使用引号括起来 hexo new [layout] generate 生成静态文件(-d, –deploy文件生成后立即部署网站) hexo generate publish 发表草稿 hexo publish [layout] server 启动服务器，默认情况下，访问网址为:localhost:4000/ hexo server deploy 部署网站 （一般写文章的时候：hexo g -d 这种形式使用较多） hexo deploy render 渲染文件 hexo render [f1]… migrate 从其他博客系统迁移内容 hexo migrate clean 清除缓存文件(db.json)和已经生成的静态文件(public)在某些情况下（尤其是在更换主题之后），如果发现对站点的更改不生效可以使用此命令 hexo clean list 列出网站资料 hexo list version 显示Hexo版本 hexo version 选项安全模式 hexo –safe 在安全模式下，不会载入任何插件和脚本，当安装新插件遇到问题时，可以尝试以安全模式重新执行。 调试模式 hexo –debug 在终端中显示调试信息并记录到debug.log]]></content>
  </entry>
  <entry>
    <title><![CDATA[英语单词]]></title>
    <url>%2F2018%2F12%2F15%2F%E8%8B%B1%E8%AF%AD%E5%8D%95%E8%AF%8D%2F</url>
    <content type="text"><![CDATA[单词 短语 例句 prosperity n.繁荣昌盛 thriving and prosperous Wish prosperity your new company drain v.排水n.下水道，消耗 brain drain These drains are used to carry sewage away filthya.污秽的;肮脏的 filthy lucre 不义之财 None of the roommates liked to clean,so the place was always filthy tenuren.任期，终身职位 CEO tenure The queen’s tenure has broken the record desolatea.荒凉的；孤单寂寞的 desolate wilderness荒凉的原野 The place has become very desolate now. physiologicala.生理的，生理学的 pyhsicological need生理需要 The teacher is giving a lecture about physicological knowledge reproachv.责备、指责 beyond reproach They reproached him for being late to the meeting lobstern.龙虾v.捕龙虾 baked lobster Lobster is a delicious kind of seafood guidancen.引导、指导 Guidance Note指引摘要 The man gives some guidance to the boy about how to play the violin preferencen.偏爱；喜爱物 trade preference贸易优先权 I have a preference for fruits over sweets比起糖，我偏爱水果 2018/12/15 单词 短语 例句 Python n.蟒蛇、巨蛇 Python Programming Tutorial My giant python snake is the greatest pet ever! demography人口统计学 school demography学校普查 Demography is the study of the statistics of human populations人口统计学使研究人口的统计规律的学科 convulsev.使震动、使抽出 convulse nation The patient convulsed before losing consciousness. attestvt.证明;作证n.证明书 Hygiene attest卫生证明 Let me give you a note to take to school to attest that you are ill. stubblen.残株；发茬;胡茬 corn stubble玉米胡茬 I haven’t shaved for a few days;it’s grown some stubble. incipient初期的，刚出现的 incipient cataract初期白内障 Buds are the incipient stage of flowers.花蕾使一朵化最初期的样子 querulousa.易怒的，暴躁的，抱怨的 querulous comments不满的声音 My querulous old dad’s always complaining about something or other. redemptionn.赎回;实践;偿还 Redemption Point换购积分 A confession is the only way to get redemption忏悔使获得拯救的唯一方式 legiblea.清晰的;易读的 Legible diagram清晰的图标 It’s clear to see the typewritten note is more legible很显然，电脑打印的便条他更清晰易读 irreparable不能修复的；不可弥补的 irreparable system不可修复的系统 The cellphone was broken so badly that it is irreparable.这部手机被砸的太烂，已经不能修补了 2018/12/16]]></content>
      <categories>
        <category>英语</category>
      </categories>
      <tags>
        <tag>英语单词</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Javaweb]]></title>
    <url>%2F2018%2F12%2F14%2FJavaweb%2F</url>
    <content type="text"><![CDATA[Servlet上下文 Servlet容器在启动时会自动加载Web应用，并未每个Web应用创建唯一的ServletContext对象，在ServletContext接口中定义了一组方法，Servlet可以使用这些方法与Servlet容器进行通信。 eg： 存放共享数据、得到文件的MIME类型、转发请求、向日志文件写入消息等。 ServletContext接口 一个ServletContext对象代表一个Web应用程序的上下文。Servlet容器在Servlet初始化期间向其传递要给ServletConfig对象，可以通过这个对象的getServletContext()方法来得到ServletContext对象，也可以通过GenericServlet类的getServletContext()方法来得到它。 ServletContext中常用的方法|方法名|描述||—:|—:||getAttribute()|根据给定的属性返回设定的值||getAttributeName()|返回一个Enumeration对象，它包含了存储在ServletContext对象中的所有属性名||getAttribute(String name,Object object)|把一个对象和一个属性名绑定，将对象存储在这个ServletContext| 使用ServletContext实现计算网页访问的次数123456789ServletContext context = getServletContext();Integer count = (Integer)context.getAttribute(&quot;counter&quot;);if(count == null)&#123; count = new Integer(1);&#125;else&#123; count = new Integer(count.intValue+1)&#125;context.setAttribute(&quot;counter&quot;,count); 请求转发与重定向 在Web应用中，MVC（模型-视图-控制器）。在MVC模式中控制器的角色由Servlet充当，它可以将请求转发给另一个Servlet或JSP页面，然后由他们进行处理并产生对i请求的响应。完成请求转发就要使用到javax.servletRequestDispatcher接口。 RequestDispatcher接口 RequestDispatcher对象由Servlet容器创建。用于封装一个由路径所表示的服务器资源。利用RequestDispatcher对象，可以把请求转发给其他的Servlet或JSP页面。在RequestDispatcher接口中定义的两个方法： (1) forward(ServletRequest request,ServletResponse response) 该方法用于将请求从另一个Servlet传递给服务器上的其他Servlet、JSP或者是HTML页面。在Servlet中，可以对请求进行处理，然后调用这个方法，由其他的资源来生成响应 获取RequestDispatcher对象 有三种方法可以得到RequestDispatcher对象： 一种是利用ServletRequest接口中的getRequestDispatcher()方法， 利用ServletContext接口中的getNamedDispatcher() 利用ServletContext接口中的getRequestDispatcher() ServletRequest接口和ServletContext接口各自提供了一个getRequestDispatcher()方法，他们的参数都是资源的路径名。但是ServlertContext.getRequestDispatcher()方法的参数必须以（/）开始，被解释为相对于当前上下文根路径ServletRequest.getRequestDispatcher()方法的参数不但可以是相对于上下文根的路径，还可以是相对于当前Servlet的路径。 ####### 请求重定向 HttpServletResponse接口的sendRedirect()方法和RequestDispatcher接口的forward()方法都可以利用其他的资源（Servlet、JSP或HTML文件）来为客户服务，但两种方法有本质的区别 会话跟踪 当客户访问Web应用时，Web服务器经常需要跟踪用户的状态Web服务器跟踪客户状态的方法4种： 建立含有跟踪数据的隐藏表单字段 重写包含额外参数的URL 使用持久化的Cookie 使用ServletAPI中的Session（会话）机制]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
      <tags>
        <tag>Javaweb</tag>
        <tag>Web开发</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F12%2F14%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
